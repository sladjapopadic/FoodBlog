(function ($, d, f, g) { $.fn.swSlider = function (b) { var c = { slideSpeed: 600, animationSpeed: 2000, useCarousel: true, startSlideShow: true, nextItemClass: 'SlideNext', backItemClass: 'SlideBack', playItemClass: 'SlidePlay' }, options = $.extend(c, b), self = $(this), sliderWidth = self.width(), slideCounter = $('.slider > li', self).length, slideContainer = $('ul:first', self), currentSlide = 0, intervall = g, hoverCheck = true, wasClicked = false, bindEvents = function () { if (Modernizr.touch) { self.touchSwipeLeft(slideNextEvent); self.touchSwipeRight(slideBackEvent) } $('.' + options.backItemClass).show().on('click', slideBackEvent); $('.' + options.nextItemClass).show().on('click', slideNextEvent); $('.' + options.playItemClass).show().on('click', playSlidesEvent); $(self).hover(hoverInEvent, hoverOutEvent) }, playSlides = function () { if (intervall === g) { intervall = setInterval(slideNext, options.animationSpeed) } else { d.clearInterval(intervall); intervall = g } }, addCaroussellItems = function () { if (slideCounter > 1) { var a = $('> li:first', slideContainer), last = $('> li:last', slideContainer); $(slideContainer).append(a.clone()).prepend(last.clone()) } }, slideBack = function () { if (options.useCarousel && !wasClicked) { wasClicked = true; currentSlide = --currentSlide % slideCounter; slideContainer.animate({ marginLeft: -1 * currentSlide * sliderWidth }, options.slideSpeed, function () { if (currentSlide === 0) { slideContainer.attr('style', 'margin-left:' + (-1 * (slideCounter - 2) * sliderWidth) + 'px;'); currentSlide = (slideCounter - 2) } wasClicked = false }) } if (!options.useCarousel) { if (currentSlide === 0) { currentSlide = slideCounter - 1 } else { currentSlide = --currentSlide % slideCounter } slideContainer.animate({ marginLeft: -1 * currentSlide * sliderWidth }, options.slideSpeed) } }, slideNext = function () { if (options.useCarousel && !wasClicked) { wasClicked = true; currentSlide = ++currentSlide % slideCounter; slideContainer.animate({ marginLeft: -1 * currentSlide * sliderWidth }, options.slideSpeed, function () { if (currentSlide === (slideCounter - 1)) { slideContainer.attr('style', 'margin-left:' + (-1 * sliderWidth) + 'px;'); currentSlide = 1 } wasClicked = false }) } if (!options.useCarousel) { currentSlide = ++currentSlide % slideCounter; slideContainer.animate({ marginLeft: -1 * currentSlide * sliderWidth }, options.slideSpeed) } }, playSlidesEvent = function (e) { playSlides(); e.preventDefault() }, slideBackEvent = function (e) { d.clearInterval(intervall); intervall = g; slideBack(); e.preventDefault() }, slideNextEvent = function (e) { d.clearInterval(intervall); intervall = g; slideNext(); e.preventDefault() }, hoverInEvent = function () { if (intervall) { hoverCheck = true; d.clearInterval(intervall); intervall = g } else { hoverCheck = false } }, hoverOutEvent = function () { if (hoverCheck) { intervall = setInterval(slideNext, options.animationSpeed) } }; (function init() { if (self.attr('Data-Bound')) { console.log('Found'); return self } self.attr('Data-Bound', 'true'); if (options.useCarousel) { addCaroussellItems(); slideCounter = $('.slider > li', self).length; slideContainer = $('ul:first', self); slideContainer.attr('style', 'margin-left:' + (-1 * sliderWidth) + 'px;'); currentSlide = 1 } if (options.startSlideShow) { playSlides() } bindEvents() })() } })(jQuery, window, document);